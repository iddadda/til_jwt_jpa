constants:
  file:
    directory: D:\student\ida\backend\upload
  jwt:
    issuer: green502@green.com  #??? ??
    bearer-format: JWT

    claim-key: signedUser
    secret-key: DaeguGreenArtAcademyClass502MsaClassFightingkkkkkk #42? ???? ??? ?? ??? ???? ? ?
    access-token-cookie-name: access-token
    access-token-cookie-path: / #?? ???? ??? ???
    access-token-cookie-validity-seconds: 900 #15?(60?*15)
    access-token-validity-milliseconds: 900_000 #15?(60

    refresh-token-cookie-name: refresh-token
    refresh-token-cookie-path: /api/v1/account/reissue #?? ???? ??? ???
    refresh-token-cookie-validity-seconds: 1_296_000 #15?(60*60*24*15)
    refresh-token-validity-milliseconds: 1_296_000_000 #15?(60*60*24*15*1000)

spring:
  application:
    name: gallery
  datasource:
    url: jdbc:log4jdbc:mariadb://localhost/gallery_jpa
    username: root
    password: green502
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
  jpa:
    database: mysql
    hibernate:
     #ddl-auto: update #테이블은 없는데 entity가 존재하면 create 한다.
      ddl-auto: create #프로젝트 실행시마다 테이블 drop 후 다시 create
    properties:
      hibernate:
        jdbc:
          batch_size: 20
        format_sql: true #쿼리문 로그를 찍어줄 때 보기 편하게 포맷됨
        order_updates: true
        show_sql: true
    defer-datasource-initialization: true
  servlet:
    multipart:
      max-file-size: 15MB
  sql:
    init:
      mode: always

mybatis:
  mapper-locations: mappers/**/*.xml
  configuration:
    map-underscore-to-camel-case: true